{"version":3,"sources":["index.js"],"names":["Square","props","clasNames","isWinner","join","className","onClick","value","Board","n","lines","i","length","a","b","c","d","e","this","squares","includes","squareIsWinner","m","num","subTable","subRow","j","push","renderSquare","board","row","createSubTable","createTable","React","Component","Game","state","Array","fill","xIsNext","handleClick","bind","resetGame","setState","slice","calculateWinner","p","Math","floor","col","indexes","subToBoard","left","right","status","winner","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cc3bc98.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n/* Square Component: defined as a function component*/\nfunction Square(props) {\n\n  /*\n    Return a button element with 2 clasNames: \"square\" and then\n    \"square-isLooser\" if props.isWinner = false or \"square-isWinner\"\n    if props.isWinner = true.\n  */\n\n  /*Props coming from the Board component : value, onClick, isWinner*/\n\n  const clasNames = [\"square\",(props.isWinner)? \"square-isWinner\" : \"square-isLooser\" ].join(\" \");\n\n  /*\n  const styleLooser = {};\n  const styleWinner = {background : \"white\"}\n  */\n  return (\n    <button className={clasNames}\n            onClick = {props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\n//\n\nclass Board extends React.Component {\n\n  /*Receives from Game the props: onClick, squares*/\n\n  /*Function that checks if square[i] is in the winner line*/\n  squareIsWinner(n){\n    const lines = [\n      [0,1,2,3,4],\n      [1,2,3,4,5],\n      [6,7,8,9,10],\n      [7,8,9,10,11],\n      [12,13,14,15,16],\n      [13,14,15,16,17],\n      [18,19,20,21,22],\n      [19,20,21,22,23],\n      [24,25,26,27,28],\n      [25,26,27,28,29],\n      [30,31,32,33,34],\n      [31,32,33,34,35],\n      [0,6,12,18,24],\n      [6,12,18,24,30],\n      [1,7,13,19,25],\n      [7,13,19,25,31],\n      [2,8,14,20,26],\n      [8,14,20,26,32],\n      [3,9,15,21,27],\n      [9,15,21,27,33],\n      [4,10,16,22,28],\n      [10,16,22,28,34],\n      [5,11,17,23,29],\n      [11,17,23,29,35],\n      [1,8,15,22,29],\n      [0,7,14,21,28],\n      [7,14,21,28,35],\n      [6,13,20,27,34],\n      [4,9,14,19,24],\n      [5,10,15,20,25],\n      [10,15,20,25,30],\n      [11,16,21,26,31]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c, d, e] = lines[i];\n      if (this.props.squares[a] && this.props.squares[a] === this.props.squares[b] && this.props.squares[a] === this.props.squares[c] && this.props.squares[a] === this.props.squares[d] && this.props.squares[a] === this.props.squares[e]) {\n        return [a,b,c,d,e].includes(n);\n      }\n    }\n    return false;\n  }\n\n  /*Render the squares*/\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        isWinner = {this.squareIsWinner(i)}\n      />\n    );\n  }\n\n\n\n  /* Function to create the SubTable*/\n  createSubTable(n,m) {\n    /*n,m are the subtable indexes*/\n    let subTable = []\n    let num;\n\n    // Outer loop to create each line\n    for (let i = 0; i < 3; i++) {\n      let subRow = []\n      //Inner loop to create children\n      for (let j = 0; j < 3; j++) {\n        num = 6*(3*n+i) + 3*m + j;\n        subRow.push(<td>{this.renderSquare(num)}</td>)\n      }\n      //Create the parent and add the children\n      subTable.push(<tr className=\"subtable-row\">{subRow}</tr>)\n    }\n    return (<table className = \"subTable\">{subTable}</table>)\n  }\n\n  createTable(){\n    let board = []\n\n    // Outer loop to create each line\n    for (let n = 0; n < 2; n++) {\n      let row = []\n      //Inner loop to create children\n      for (let m = 0; m < 2; m++) {\n        row.push(<td>{this.createSubTable(n,m)}</td>)\n      }\n      //Create the parent and add the children\n      board.push(<tr className=\"board-row\">{row}</tr>)\n    }\n    return board\n  }\n\n  render() {\n    return(\n      <table className=\"Table\">\n        {this.createTable()}\n      </table>\n    )\n  }\n\n}\n\n\n\nclass Game extends React.Component {\n\n  /*Constructor of the class*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n    /*Bind functions*/\n    this.handleClick = this.handleClick.bind(this);\n    this.resetGame = this.resetGame.bind(this)\n  }\n\n  /*HANDLELERS*/\n\n  /*Add a method to reset the game*/\n  resetGame() {\n    this.setState({\n      squares: Array(9).fill(null),\n      xIsNext: true\n    });\n  }\n  /*handle a click on a square*/\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    /*Change the state of the squares*/\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      squares: squares,\n      xIsNext: !(this.state.xIsNext)\n    });\n  }\n\n  /*sub-board index to board index*/\n  subToBoard(n,m,p){\n    return 6*(n+3*Math.floor(p/3)) + 3*(p%3) + m\n  }\n\n  /*rotations of the squares in a sub-board*/\n  left(i) {\n    const arr = [1,2,5,0,4,8,3,6,7]\n    return arr[i]\n  }\n\n  right(i) {\n    const arr = [3,0,1,6,4,2,7,8,5]\n    return arr[i]\n  }\n\n  /*rotation of the squares in the complete board*/\n  rotateLeft(row,col) {\n    /*row,col are the row and column indexes of the subTable*/\n    const squares = [];\n    const indexes = [];\n    const p = 0;\n\n    for(let i = 0;i<9;i++){\n      indexes.push(this.subToBoard(row,col,i));\n    }\n\n    for(let n = 0;n<36;n++){\n      if (indexes.includes(n)){\n        squares.push(this.squares[this.subToBoard(row,col,this.left(p))]);\n        p++;\n      } else {\n        squares.push(this.squares[n]);\n      }\n      this.setState({squares: squares})\n    }\n  }\n\n  rotateRight(row,col) {\n    /*row,col are the row and column indexes of the subTable*/\n    const squares = [];\n    const indexes = [];\n    const p = 0;\n\n    for(let i = 0;i<9;i++){\n      indexes.push(this.subToBoard(row,col,i));\n    }\n\n    for(let n = 0;n<36;n++){\n      if (indexes.includes(n)){\n        squares.push(this.squares[this.subToBoard(row,col,this.right(p))]);\n        p++;\n      } else {\n        squares.push(this.squares[n]);\n      }\n      this.setState({squares: squares})\n    }\n  }\n\n\n\n\n\n\n  /*RENDER*/\n\n  render() {\n    const squares = this.state.squares.slice();\n    const winner = calculateWinner(squares);\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else if (!squares.includes(null)) {\n      status = \"It's a tie!!!\"\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div>\n          <div className=\"game-board\">\n            <Board\n              squares={squares}\n              onClick={this.handleClick}\n            />\n            <div className=\"reset-button\">\n              <button onClick = {this.resetGame}>\n                  Reset\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\n/*Render the game class*/\n\n\n\nReactDOM.render(\n  <Game />, document.getElementById(\"root\")\n  );\n\n/*Auxiliar function that calculates the winner*/\nfunction calculateWinner(squares) {\n  const lines = [\n    [0,1,2,3,4],\n    [1,2,3,4,5],\n    [6,7,8,9,10],\n    [7,8,9,10,11],\n    [12,13,14,15,16],\n    [13,14,15,16,17],\n    [18,19,20,21,22],\n    [19,20,21,22,23],\n    [24,25,26,27,28],\n    [25,26,27,28,29],\n    [30,31,32,33,34],\n    [31,32,33,34,35],\n    [0,6,12,18,24],\n    [6,12,18,24,30],\n    [1,7,13,19,25],\n    [7,13,19,25,31],\n    [2,8,14,20,26],\n    [8,14,20,26,32],\n    [3,9,15,21,27],\n    [9,15,21,27,33],\n    [4,10,16,22,28],\n    [10,16,22,28,34],\n    [5,11,17,23,29],\n    [11,17,23,29,35],\n    [1,8,15,22,29],\n    [0,7,14,21,28],\n    [7,14,21,28,35],\n    [6,13,20,27,34],\n    [4,9,14,19,24],\n    [5,10,15,20,25],\n    [10,15,20,25,30],\n    [11,16,21,26,31]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d, e] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}