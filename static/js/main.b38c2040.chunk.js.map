{"version":3,"sources":["index.js"],"names":["Square","props","clasNames","isWinner","join","className","onClick","value","Board","n","lines","i","length","a","b","c","d","e","this","squares","includes","squareIsWinner","m","num","subTable","subRow","j","push","renderSquare","board","row","createSubTable","createTable","React","Component","Game","state","history","Array","fill","position","stepNumber","xIsNext","ascendingOrder","slice","calculateWinner","setState","concat","Math","floor","current","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b38c2040.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n/* Square Component: defined as a function component*/\nfunction Square(props) {\n\n  /*\n    Return a button element with 2 clasNames: \"square\" and then\n    \"square-isLooser\" if props.isWinner = false or \"square-isWinner\"\n    if props.isWinner = true.\n  */\n\n  /*Props coming from the Board component : value, onClick, isWinner*/\n\n  const clasNames = [\"square\",(props.isWinner)? \"square-isWinner\" : \"square-isLooser\" ].join(\" \");\n\n  /*\n  const styleLooser = {};\n  const styleWinner = {background : \"white\"}\n  */\n  return (\n    <button className={clasNames}\n            onClick = {props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\n//\n\nclass Board extends React.Component {\n\n  /*Function that checks if square[i] is in the winner line*/\n  squareIsWinner(n){\n    const lines = [\n      [0,1,2,3,4],\n      [1,2,3,4,5],\n      [6,7,8,9,10],\n      [7,8,9,10,11],\n      [12,13,14,15,16],\n      [13,14,15,16,17],\n      [18,19,20,21,22],\n      [19,20,21,22,23],\n      [24,25,26,27,28],\n      [25,26,27,28,29],\n      [30,31,32,33,34],\n      [31,32,33,34,35],\n      [0,6,12,18,24],\n      [6,12,18,24,30],\n      [1,7,13,19,25],\n      [7,13,19,25,31],\n      [2,8,14,20,26],\n      [8,14,20,26,32],\n      [3,9,15,21,27],\n      [9,15,21,27,33],\n      [4,10,16,22,28],\n      [10,16,22,28,34],\n      [5,11,17,23,29],\n      [11,17,23,29,35],\n      [1,8,15,22,29],\n      [0,7,14,21,28],\n      [7,14,21,28,35],\n      [6,13,20,27,34],\n      [4,9,14,19,24],\n      [5,10,15,20,25],\n      [10,15,20,25,30],\n      [11,16,21,26,31]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c, d, e] = lines[i];\n      if (this.props.squares[a] && this.props.squares[a] === this.props.squares[b] && this.props.squares[a] === this.props.squares[c] && this.props.squares[a] === this.props.squares[d] && this.props.squares[a] === this.props.squares[e]) {\n        return [a,b,c,d,e].includes(n);\n      }\n    }\n    return false;\n  }\n\n  /*Render the squares*/\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        isWinner = {this.squareIsWinner(i)}\n      />\n    );\n  }\n\n\n\n  /* Function to create the SubTable*/\n  createSubTable(n,m) {\n    /*n,m are the subtable indexes*/\n    let subTable = []\n    let num;\n\n    // Outer loop to create each line\n    for (let i = 0; i < 3; i++) {\n      let subRow = []\n      //Inner loop to create children\n      for (let j = 0; j < 3; j++) {\n        num = 6*(3*n+i) + 3*m + j;\n        subRow.push(<td>{this.renderSquare(num)}</td>)\n      }\n      //Create the parent and add the children\n      subTable.push(<tr className=\"subtable-row\">{subRow}</tr>)\n    }\n    return (<table className = \"subTable\">{subTable}</table>)\n  }\n\n  createTable(){\n    let board = []\n\n    // Outer loop to create each line\n    for (let n = 0; n < 2; n++) {\n      let row = []\n      //Inner loop to create children\n      for (let m = 0; m < 2; m++) {\n        row.push(<td>{this.createSubTable(n,m)}</td>)\n      }\n      //Create the parent and add the children\n      board.push(<tr className=\"board-row\">{row}</tr>)\n    }\n    return board\n  }\n\n  render() {\n    return(\n      <table className=\"Table\">\n        {this.createTable()}\n      </table>\n    )\n  }\n\n}\n\n\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n          position: null\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n      ascendingOrder: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          position: [1+i%6,1+Math.floor(i/6)]\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !(this.state.xIsNext)\n    });\n  }\n\n\n  render(){\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n\n    return (\n      <div className=\"board\">\n        <Board\n          squares = {current.squares}\n          onClick = {(i)=>this.handleClick(i)}\n        />\n      </div>\n    );\n  }\n\n}\n\n\n/*Render the game class*/\n\n\n\nReactDOM.render(\n  <Game />, document.getElementById(\"root\")\n  );\n\n/*Auxiliar function that calculates the winner*/\nfunction calculateWinner(squares) {\n  const lines = [\n    [0,1,2,3,4],\n    [1,2,3,4,5],\n    [6,7,8,9,10],\n    [7,8,9,10,11],\n    [12,13,14,15,16],\n    [13,14,15,16,17],\n    [18,19,20,21,22],\n    [19,20,21,22,23],\n    [24,25,26,27,28],\n    [25,26,27,28,29],\n    [30,31,32,33,34],\n    [31,32,33,34,35],\n    [0,6,12,18,24],\n    [6,12,18,24,30],\n    [1,7,13,19,25],\n    [7,13,19,25,31],\n    [2,8,14,20,26],\n    [8,14,20,26,32],\n    [3,9,15,21,27],\n    [9,15,21,27,33],\n    [4,10,16,22,28],\n    [10,16,22,28,34],\n    [5,11,17,23,29],\n    [11,17,23,29,35],\n    [1,8,15,22,29],\n    [0,7,14,21,28],\n    [7,14,21,28,35],\n    [6,13,20,27,34],\n    [4,9,14,19,24],\n    [5,10,15,20,25],\n    [10,15,20,25,30],\n    [11,16,21,26,31]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d, e] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}